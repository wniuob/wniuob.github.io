<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wniu</title>
  
  <subtitle>采菊东篱下</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2019-06-29T03:40:43.527Z</updated>
  <id>/</id>
  
  <author>
    <name>wniu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux时区设置</title>
    <link href="/linux-date.html"/>
    <id>/linux-date.html</id>
    <published>2019-06-29T03:21:46.000Z</published>
    <updated>2019-06-29T03:40:43.527Z</updated>
    
    <content type="html"><![CDATA[<h4 id="查看系统时间及时区"><a href="#查看系统时间及时区" class="headerlink" title="查看系统时间及时区"></a>查看系统时间及时区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[wniuob@wniuob ~]$ date</span><br><span class="line">2019年 06月 29日 星期六 02:59:42 UTC</span><br></pre></td></tr></table></figure><h4 id="修改系统时区"><a href="#修改系统时区" class="headerlink" title="修改系统时区"></a>修改系统时区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">[wniuob@wniuob ~]$ tzselect</span><br><span class="line">Please identify a location so that time zone rules can be <span class="built_in">set</span> correctly.</span><br><span class="line">Please select a continent or ocean.</span><br><span class="line"> 1) Africa</span><br><span class="line"> 2) Americas</span><br><span class="line"> 3) Antarctica</span><br><span class="line"> 4) Arctic Ocean</span><br><span class="line"> 5) Asia</span><br><span class="line"> 6) Atlantic Ocean</span><br><span class="line"> 7) Australia</span><br><span class="line"> 8) Europe</span><br><span class="line"> 9) Indian Ocean</span><br><span class="line">10) Pacific Ocean</span><br><span class="line">11) none - I want to specify the time zone using the Posix TZ format.</span><br><span class="line"><span class="comment">#? 5</span></span><br><span class="line">Please select a country.</span><br><span class="line"> 1) Afghanistan  18) Israel    35) Palestine</span><br><span class="line"> 2) Armenia  19) Japan    36) Philippines</span><br><span class="line"> 3) Azerbaijan  20) Jordan    37) Qatar</span><br><span class="line"> 4) Bahrain  21) Kazakhstan    38) Russia</span><br><span class="line"> 5) Bangladesh  22) Korea (North)    39) Saudi Arabia</span><br><span class="line"> 6) Bhutan  23) Korea (South)    40) Singapore</span><br><span class="line"> 7) Brunei  24) Kuwait    41) Sri Lanka</span><br><span class="line"> 8) Cambodia  25) Kyrgyzstan    42) Syria</span><br><span class="line"> 9) China  26) Laos    43) Taiwan</span><br><span class="line">10) Cyprus  27) Lebanon    44) Tajikistan</span><br><span class="line">11) East Timor  28) Macau    45) Thailand</span><br><span class="line">12) Georgia  29) Malaysia    46) Turkmenistan</span><br><span class="line">13) Hong Kong  30) Mongolia    47) United Arab Emirates</span><br><span class="line">14) India  31) Myanmar (Burma)    48) Uzbekistan</span><br><span class="line">15) Indonesia  32) Nepal    49) Vietnam</span><br><span class="line">16) Iran  33) Oman    50) Yemen</span><br><span class="line">17) Iraq  34) Pakistan</span><br><span class="line"><span class="comment">#? 9</span></span><br><span class="line">Please select one of the following time zone regions.</span><br><span class="line">1) Beijing Time</span><br><span class="line">2) Xinjiang Time</span><br><span class="line"><span class="comment">#? 1</span></span><br><span class="line"></span><br><span class="line">The following information has been given:</span><br><span class="line"></span><br><span class="line">China</span><br><span class="line">Beijing Time</span><br><span class="line"></span><br><span class="line">Therefore TZ=<span class="string">'Asia/Shanghai'</span> will be used.</span><br><span class="line">Local time is now:Sat Jun 29 11:00:22 CST 2019.</span><br><span class="line">Universal Time is now:Sat Jun 29 03:00:22 UTC 2019.</span><br><span class="line">Is the above information OK?</span><br><span class="line">1) Yes</span><br><span class="line">2) No</span><br><span class="line"><span class="comment">#? yes</span></span><br><span class="line">Please enter 1 <span class="keyword">for</span> Yes, or 2 <span class="keyword">for</span> No.</span><br><span class="line"><span class="comment">#? 1</span></span><br><span class="line"></span><br><span class="line">You can make this change permanent <span class="keyword">for</span> yourself by appending the line</span><br><span class="line">TZ=<span class="string">'Asia/Shanghai'</span>; <span class="built_in">export</span> TZ</span><br><span class="line">to the file <span class="string">'.profile'</span> <span class="keyword">in</span> your home directory; <span class="keyword">then</span> <span class="built_in">log</span> out and <span class="built_in">log</span> <span class="keyword">in</span> again.</span><br><span class="line"></span><br><span class="line">Here is that TZ value again, this time on standard output so that you</span><br><span class="line">can use the /usr/bin/tzselect <span class="built_in">command</span> <span class="keyword">in</span> shell scripts:</span><br><span class="line">Asia/Shanghai</span><br></pre></td></tr></table></figure><p>如上依次输入<br>Asia(5)-&gt;China(9)-&gt;Beijing Time(1)-&gt;Yes(yes)-&gt;Yes(1);</p><p>执行命令  ps:这里需要root权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">$ vi /etc/profile</span><br><span class="line">新增 </span><br><span class="line">TZ=<span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure><h4 id="查看mysql时区"><a href="#查看mysql时区" class="headerlink" title="查看mysql时区"></a>查看mysql时区</h4><p>登录mysql后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">"%time_zone%"</span>;</span><br><span class="line">+------------------+--------+</span><br><span class="line">| Variable_name    | Value  |</span><br><span class="line">+------------------+--------+</span><br><span class="line">| system_time_zone | CST    |</span><br><span class="line">| time_zone        | SYSTEM |</span><br><span class="line">+------------------+--------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line">默认：time_zone说明mysql使用system的时区，system_time_zone说明system使用CST时区</span><br></pre></td></tr></table></figure><p>重启linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ shutdown -r now</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;查看系统时间及时区&quot;&gt;&lt;a href=&quot;#查看系统时间及时区&quot; class=&quot;headerlink&quot; title=&quot;查看系统时间及时区&quot;&gt;&lt;/a&gt;查看系统时间及时区&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="笔记" scheme="/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="linux" scheme="/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Mac 安装Python3.7.x 并设置为默认版本</title>
    <link href="/python.html"/>
    <id>/python.html</id>
    <published>2019-06-25T09:16:37.000Z</published>
    <updated>2019-06-27T03:22:59.848Z</updated>
    
    <content type="html"><![CDATA[<p>因Mac自带Python版本是2.7 手动升级并配置默认</p><p>选择<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">brew</a> 安装python3  </p><p><code>$ brew install python3</code></p><p>安装好之后 查看python安装目录   </p><p><code>$ which python3</code></p><p>配置python的外部环境变量</p><p><code>$ vi ~/.bash_profile</code></p><p>新增 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Setting PATH for Python 3.7</span></span><br><span class="line"><span class="comment"># The original version is saved in .bash_profile.pysave</span></span><br><span class="line">PATH=<span class="string">"/Library/Frameworks/Python.framework/Versions/3.7/bin:<span class="variable">$&#123;PATH&#125;</span>"</span></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> python=<span class="string">"/Library/Frameworks/Python.framework/Versions/3.7/bin/python3"</span></span><br></pre></td></tr></table></figure><p>修改完成后执行命令  </p><p><code>$ source ~/.bash_profile</code></p><p>重新打开新的命令行窗口 运行 python –version   </p><p>收工～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因Mac自带Python版本是2.7 手动升级并配置默认&lt;/p&gt;
&lt;p&gt;选择&lt;a href=&quot;https://brew.sh/index_zh-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;brew&lt;/a&gt; 安装python3  &lt;/p&gt;
&lt;p&gt;&lt;c
      
    
    </summary>
    
      <category term="笔记" scheme="/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>centos7 编译安装lnmp</title>
    <link href="/lnmp.html"/>
    <id>/lnmp.html</id>
    <published>2019-06-21T01:39:59.000Z</published>
    <updated>2019-06-27T03:23:38.200Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-依赖包安装"><a href="#1-依赖包安装" class="headerlink" title="1.依赖包安装"></a>1.依赖包安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install gcc gcc-c++ openssl openssl-devel cyrus-sasl-md5 gcc-c++ glibc</span><br></pre></td></tr></table></figure><h3 id="2-创建安装目录"><a href="#2-创建安装目录" class="headerlink" title="2.创建安装目录"></a>2.创建安装目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo -i </span><br><span class="line">$ mkdir /gcdata</span><br><span class="line">$ mkdir /gcdata/package</span><br><span class="line">$ mkdir –p /gcdata/server</span><br><span class="line">$ mkdir –p /gcdata/webapps</span><br><span class="line">$ mkdir –p /gcdata/logs</span><br></pre></td></tr></table></figure><p>server目录存放所有的服务器软件（nginx、php），webapps目录存放所有部署的代码及程序，package目录用来存放安装过程中需要用到的编译后的库文件。</p><h3 id="3-安装nginx"><a href="#3-安装nginx" class="headerlink" title="3.安装nginx"></a>3.安装nginx</h3><h4 id="3-1-安装pcre"><a href="#3-1-安装pcre" class="headerlink" title="3.1 安装pcre"></a>3.1 安装pcre</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~ </span><br><span class="line">$ wget https://sourceforge.net/projects/pcre/files/pcre/8.41/pcre-8.41.tar.gz</span><br><span class="line">$ tar -zxvf pcre-8.41.tar.gz</span><br></pre></td></tr></table></figure><h4 id="3-2-安装zlib"><a href="#3-2-安装zlib" class="headerlink" title="3.2 安装zlib"></a>3.2 安装zlib</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://sourceforge.net/projects/libpng/files/zlib/1.2.11/zlib-1.2.11.tar.gz</span><br><span class="line">$ tar -zxvf zlib-1.2.11.tar.gz</span><br></pre></td></tr></table></figure><h4 id="3-3-安装openssl"><a href="#3-3-安装openssl" class="headerlink" title="3.3 安装openssl"></a>3.3 安装openssl</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://www.openssl.org/<span class="built_in">source</span>/openssl-1.1.0b.tar.gz</span><br><span class="line">$ tar -zxvf openssl-1.1.0b.tar.gz</span><br></pre></td></tr></table></figure><h4 id="3-4-为nginx添加用户组"><a href="#3-4-为nginx添加用户组" class="headerlink" title="3.4 为nginx添加用户组"></a>3.4 为nginx添加用户组</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ groupadd -r www</span><br><span class="line">$ useradd -r -g www www</span><br></pre></td></tr></table></figure><h4 id="3-5-安装nginx"><a href="#3-5-安装nginx" class="headerlink" title="3.5 安装nginx"></a>3.5 安装nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class="line">$ tar -zxvf nginx-1.12.2.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> nginx-1.12.2/</span><br><span class="line">$ ./configure --prefix=/gcdata/server/nginx-1.12.2 --sbin-path=/gcdata/server/nginx-1.12.2/sbin/nginx --conf-path=/gcdata/server/nginx-1.12.2/nginx.conf --pid-path=/gcdata/server/nginx-1.12.2/nginx.pid --user=www --group=www --with-http_ssl_module --with-http_flv_module --with-http_mp4_module  --with-http_stub_status_module --with-select_module --with-poll_module --error-log-path=/gcdata/logs/nginx/error.log --http-log-path=/gcdata/logs/nginx/access.log  --with-pcre=/root/pcre-8.41 --with-zlib=/root/zlib-1.2.11 --with-openssl=/root/openssl-1.1.0b</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><h4 id="3-6-启动nginx"><a href="#3-6-启动nginx" class="headerlink" title="3.6 启动nginx"></a>3.6 启动nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /gcdata/server/nginx-1.12.2/sbin/nginx</span><br></pre></td></tr></table></figure><p>查看nginx进程状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ps aux | grep nginx</span><br></pre></td></tr></table></figure><h4 id="3-7-加入系统环境变量"><a href="#3-7-加入系统环境变量" class="headerlink" title="3.7 加入系统环境变量"></a>3.7 加入系统环境变量</h4><p>vi编辑/etc/profile文件，在文件最末尾加上如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export NGINX_HOME=/gcdata/server/nginx-1.12.2</span><br><span class="line">export PATH=$PATH:$NGINX_HOME/sbin</span><br></pre></td></tr></table></figure><p>保存后,使用source命令重新加载配置文件,命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source /etc/profile</span><br></pre></td></tr></table></figure><p>执行上述命令后，可使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo $PATH</span><br></pre></td></tr></table></figure><p>命令查看环境变量中是否已经加入了相关的路径</p><h4 id="3-8-加入系统服务"><a href="#3-8-加入系统服务" class="headerlink" title="3.8 加入系统服务"></a>3.8 加入系统服务</h4><p>使用vi命令在/etc/init.d/目录下创建一个nginx文件，命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/init.d/nginx</span><br></pre></td></tr></table></figure><p>文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># chkconfig: - 345 85 15</span><br><span class="line">PATH=/gcdata/server/nginx-1.12.2</span><br><span class="line">DESC=&quot;nginx daemon&quot;</span><br><span class="line">NAME=nginx</span><br><span class="line">DAEMON=$PATH/sbin/$NAME</span><br><span class="line">CONFIGFILE=$PATH/$NAME.conf</span><br><span class="line">PIDFILE=$PATH/logs/$NAME.pid</span><br><span class="line">SCRIPTNAME=/etc/init.d/$NAME</span><br><span class="line">set -e</span><br><span class="line">[ -x &quot;$DAEMON&quot; ] || exit 0</span><br><span class="line">do_start() &#123;</span><br><span class="line">$DAEMON -c $CONFIGFILE || echo -n &quot;nginx already running&quot;</span><br><span class="line">&#125;</span><br><span class="line">do_stop() &#123;</span><br><span class="line">$DAEMON -s stop || echo -n &quot;nginx not running&quot;</span><br><span class="line">&#125;</span><br><span class="line">do_reload() &#123;</span><br><span class="line">$DAEMON -s reload || echo -n &quot;nginx can&apos;t reload&quot;</span><br><span class="line">&#125;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">start)</span><br><span class="line">echo -n &quot;Starting $DESC: $NAME&quot;</span><br><span class="line">do_start</span><br><span class="line">echo &quot;.&quot;</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">echo -n &quot;Stopping $DESC: $NAME&quot;</span><br><span class="line">do_stop</span><br><span class="line">echo &quot;.&quot;</span><br><span class="line">;;</span><br><span class="line">reload|graceful)</span><br><span class="line">echo -n &quot;Reloading $DESC configuration...&quot;</span><br><span class="line">do_reload</span><br><span class="line">echo &quot;.&quot;</span><br><span class="line">;;</span><br><span class="line">restart)</span><br><span class="line">echo -n &quot;Restarting $DESC: $NAME&quot;</span><br><span class="line">do_stop</span><br><span class="line">do_start</span><br><span class="line">echo &quot;.&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;Usage: $SCRIPTNAME &#123;start|stop|reload|restart&#125;&quot;</span><br><span class="line">exit 3</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>保存文件并修改权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x /etc/init.d/nginx</span><br></pre></td></tr></table></figure><p>开启和关闭服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ /bin/systemctl start nginx</span><br><span class="line">$ /bin/systemctl stop nginx</span><br><span class="line">$ /bin/systemctl reload nginx</span><br></pre></td></tr></table></figure><p>若此时无法执行以上命令，首先要确认之前打开的nginx进程已被杀死，其次可以尝试先执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl enable nginx</span><br></pre></td></tr></table></figure><p>命令，然后再执行上述三个命令。</p><h3 id="3-9-设置开机自动启动"><a href="#3-9-设置开机自动启动" class="headerlink" title="3.9 设置开机自动启动"></a>3.9 设置开机自动启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chkconfig --add nginx</span><br><span class="line">$ chkconfig nginx on</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl enable nginx</span><br></pre></td></tr></table></figure><h3 id="4-安装php"><a href="#4-安装php" class="headerlink" title="4. 安装php"></a>4. 安装php</h3><h4 id="4-1-yum安装常用库"><a href="#4-1-yum安装常用库" class="headerlink" title="4.1 yum安装常用库"></a>4.1 yum安装常用库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$yum -y install libmcrypt-devel mhash-devel libxslt-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><h4 id="4-2-安装php"><a href="#4-2-安装php" class="headerlink" title="4.2 安装php"></a>4.2 安装php</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~</span><br><span class="line">$ wget http://cn2.php.net/distributions/php-7.1.11.tar.gz</span><br><span class="line">$ tar -zxvf php-7.1.11.tar.gz</span><br><span class="line">$ ./configure --prefix=/gcdata/server/php-7.1.11 --with-config-file-path=/gcdata/server/php-7.1.11/etc --<span class="built_in">enable</span>-fpm --with-mcrypt --<span class="built_in">enable</span>-mbstring --<span class="built_in">enable</span>-pdo --with-curl --<span class="built_in">disable</span>-debug  --<span class="built_in">disable</span>-rpath --<span class="built_in">enable</span>-inline-optimization --with-bz2  --with-zlib --<span class="built_in">enable</span>-sockets --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-sysvshm --<span class="built_in">enable</span>-pcntl --<span class="built_in">enable</span>-mbregex --with-mhash --<span class="built_in">enable</span>-zip --with-pcre-regex --with-mysqli --with-gd --with-jpeg-dir --with-freetype-dir --<span class="built_in">enable</span>-calendar</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><h4 id="4-3-设置php配置文件"><a href="#4-3-设置php配置文件" class="headerlink" title="4.3 设置php配置文件"></a>4.3 设置php配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp /root/php-7.1.11/php.ini-production /gcdata/server/php-7.1.11/etc/php.ini</span><br></pre></td></tr></table></figure><h4 id="4-4-设置php-fpm配置文件"><a href="#4-4-设置php-fpm配置文件" class="headerlink" title="4.4 设置php-fpm配置文件"></a>4.4 设置php-fpm配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /gcdata/server/php-7.1.11/etc</span><br><span class="line">$ cp php-fpm.conf.default php-fpm.conf</span><br><span class="line">$ <span class="built_in">cd</span> /gcdata/server/php-7.1.11/etc/php-fpm.d</span><br><span class="line">$ cp www.conf.default www.conf</span><br></pre></td></tr></table></figure><p>使用vi命令对php-fpm.conf的内容进行如下修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pid= /gcdata/server/php-7.1.11/var/run/php-fpm.pid</span><br></pre></td></tr></table></figure><h4 id="4-5-启动php-fpm"><a href="#4-5-启动php-fpm" class="headerlink" title="4.5 启动php-fpm"></a>4.5 启动php-fpm</h4><p>完成以上配置后，即可启动php-fpm，执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /gcdata/server/php-7.1.11/sbin/php-fpm</span><br></pre></td></tr></table></figure><h4 id="4-6-加入系统环境变量"><a href="#4-6-加入系统环境变量" class="headerlink" title="4.6 加入系统环境变量"></a>4.6 加入系统环境变量</h4><p>vi编辑/etc/profile文件，在文件最末尾加上如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PHP_HOME=/gcdata/server/php-7.1.11</span><br><span class="line">export PATH=$PATH:$PHP_HOME/bin:$PHP_HOME/sbin</span><br></pre></td></tr></table></figure><p>保存后,使用source命令重新加载配置文件,命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source /etc/profile</span><br></pre></td></tr></table></figure><h4 id="4-7-加入系统服务"><a href="#4-7-加入系统服务" class="headerlink" title="4.7 加入系统服务"></a>4.7 加入系统服务</h4><p>使用vi命令在/etc/init.d/目录下创建一个php-fpm文件，命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/init.d/php-fpm</span><br></pre></td></tr></table></figure><p>文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># php-fpm startup script for the php-fpm </span><br><span class="line"># php-fpm version:7.1.11</span><br><span class="line"># chkconfig: - 85 15</span><br><span class="line"># description: php-fpm</span><br><span class="line"># processname: php-fpm</span><br><span class="line"># pidfile: /gcdata/server/php-7.1.11/var/run/php-fpm.pid</span><br><span class="line"># config: /gcdata/server/php-7.1.11/etc/php-fpm.conf</span><br><span class="line"></span><br><span class="line">php_command=/gcdata/server/php-7.1.11/sbin/php-fom</span><br><span class="line">php_config=/gcdata/server/php-7.1.11/etc/php-fpm.conf</span><br><span class="line">php_pid=/gcdata/server/php-7.1.11/var/run/php-fpm.pid</span><br><span class="line">RETVAL=0</span><br><span class="line">prog=&quot;php-fpm&quot;</span><br><span class="line"></span><br><span class="line">#start function</span><br><span class="line">php_fpm_start() &#123;</span><br><span class="line">    /gcdata/server/php-7.1.11/sbin/php-fpm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start()&#123;</span><br><span class="line">    if [ -e $php_pid  ]</span><br><span class="line">    then</span><br><span class="line">    echo &quot;php-fpm already start...&quot;</span><br><span class="line">    exit 1</span><br><span class="line">    fi</span><br><span class="line">    php_fpm_start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop()&#123;</span><br><span class="line">    if [ -e $php_pid ]</span><br><span class="line">    then</span><br><span class="line">    parent_pid=`cat $php_pid`</span><br><span class="line">    all_pid=`ps -ef | grep php-fpm | awk &apos;&#123;if(&apos;$parent_pid&apos; == $3)&#123;print $2&#125;&#125;&apos;`</span><br><span class="line">    for pid in $all_pid</span><br><span class="line">    do</span><br><span class="line">            kill $pid</span><br><span class="line">        done</span><br><span class="line">        kill $parent_pid</span><br><span class="line">    fi</span><br><span class="line">    exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">restart()&#123;</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># See how we were called.</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">restart)</span><br><span class="line">        stop</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">status)</span><br><span class="line">        status $prog</span><br><span class="line">        RETVAL=$?</span><br><span class="line">        ;;</span><br><span class="line">*)</span><br><span class="line">        echo $&quot;Usage: $prog &#123;start|stop|restart|status&#125;&quot;</span><br><span class="line">        exit 1</span><br><span class="line">esac</span><br><span class="line">exit $RETVAL</span><br></pre></td></tr></table></figure><h4 id="4-8-设置开机启动"><a href="#4-8-设置开机启动" class="headerlink" title="4.8 设置开机启动"></a>4.8 设置开机启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chkconfig --add php-fpm</span><br><span class="line">$ chkconfig php-fpm on</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl enable php-fpm</span><br></pre></td></tr></table></figure><h3 id="5-yum安装mysql"><a href="#5-yum安装mysql" class="headerlink" title="5 yum安装mysql"></a>5 yum安装mysql</h3><h4 id="5-1-添加MySQL的yum源"><a href="#5-1-添加MySQL的yum源" class="headerlink" title="5.1 添加MySQL的yum源"></a>5.1 添加MySQL的yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line">$ yum localinstall mysql57-community-release-el7-11.noarch.rpm</span><br></pre></td></tr></table></figure><p>以上下载地址如果有变，到这里查看最新的就行：<a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/repo/yum/</a></p><p>如果上述命令执行无报错的话，可以用下面的命令查看有哪些版本可选择安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@wniuob ~]# yum repolist all | grep mysql</span><br><span class="line">mysql-cluster-7.5-community/x86_64 MySQL Cluster 7.5 Community      禁用</span><br><span class="line">mysql-cluster-7.5-community-source MySQL Cluster 7.5 Community - So 禁用</span><br><span class="line">mysql-cluster-7.6-community/x86_64 MySQL Cluster 7.6 Community      禁用</span><br><span class="line">mysql-cluster-7.6-community-source MySQL Cluster 7.6 Community - So 禁用</span><br><span class="line">mysql-connectors-community/x86_64  MySQL Connectors Community       启用:    108</span><br><span class="line">mysql-connectors-community-source  MySQL Connectors Community - Sou 禁用</span><br><span class="line">mysql-tools-community/x86_64       MySQL Tools Community            启用:     90</span><br><span class="line">mysql-tools-community-source       MySQL Tools Community - Source   禁用</span><br><span class="line">mysql-tools-preview/x86_64         MySQL Tools Preview              禁用</span><br><span class="line">mysql-tools-preview-source         MySQL Tools Preview - Source     禁用</span><br><span class="line">mysql55-community/x86_64           MySQL 5.5 Community Server       禁用</span><br><span class="line">mysql55-community-source           MySQL 5.5 Community Server - Sou 禁用</span><br><span class="line">mysql56-community/x86_64           MySQL 5.6 Community Server       禁用</span><br><span class="line">mysql56-community-source           MySQL 5.6 Community Server - Sou 禁用</span><br><span class="line">mysql57-community/x86_64           MySQL 5.7 Community Server       启用:    347</span><br><span class="line">mysql57-community-source           MySQL 5.7 Community Server - Sou 禁用</span><br><span class="line">mysql80-community/x86_64           MySQL 8.0 Community Server       禁用</span><br><span class="line">mysql80-community-source           MySQL 8.0 Community Server - Sou 禁用</span><br></pre></td></tr></table></figure><p>可以看到，除了MySQL 5.7，MySQL官方源也提供别的版本，比如说5.5、5.6、8.0，如果对别的版本有需求，安装需要的版本就行，只需用yum-config-manager启用或禁用相关的源即可，比如说禁用MySQL5.7启用MySQL5.6：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum-config-manager --disable mysql57-community</span><br><span class="line">$ yum-config-manager --enable mysql56-community</span><br></pre></td></tr></table></figure><p>确定之后，可以安装MySQL Server了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install mysql-community-server</span><br></pre></td></tr></table></figure><p>安装好之后 可使用以下命令获取MySQL临时密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep &apos;temporary password&apos; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure><p>输入临时密码后即登录MySQL<br>修改密码<br><code>update mysql.user set authentication_string=password(&#39;wniuob&#39;) where user=&#39;root&#39; and Host =&#39;localhost&#39;;</code></p><h4 id="5-2-开启远程连接"><a href="#5-2-开启远程连接" class="headerlink" title="5.2 开启远程连接"></a>5.2 开启远程连接</h4><p>要开启CentOS7下的MySQL远程访问，需要满足如下三个要求：<br>1、MySQL Server监听的IP可以被外界访问，比如说：192.168.1.x或者别的IP地址。<br>2、用于远程登录的用户需要指定允许在别的IP地址登录。新建用户的时候指定允许登录地址为%，SQL语句参考上面新建用户部分。<br>3、开放了对应的端口。</p><p>在MySQL配置文件的[mysqld]添加一行，指定MySQL监听IP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=0.0.0.0</span><br></pre></td></tr></table></figure><p>关于MySQL绑定IP，可以参考这里：<a href="https://dev.mysql.com/doc/refman/5.7/en/server-options.html#option_mysqld_bind-address" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/server-options.html#option_mysqld_bind-address</a><br>添加了之后，还需要重启MySQL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>如果开启了防火墙的话，还需要开放MySQL监听端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=3306/tcp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>如果上面的命令都没问题，到这一步可以使用如下命令从本地连接远程的数据库了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u username -h 1.2.3.4 -P 3306 -p</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-依赖包安装&quot;&gt;&lt;a href=&quot;#1-依赖包安装&quot; class=&quot;headerlink&quot; title=&quot;1.依赖包安装&quot;&gt;&lt;/a&gt;1.依赖包安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="笔记" scheme="/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="lnmp" scheme="/tags/lnmp/"/>
    
  </entry>
  
  <entry>
    <title>phpstorm xdebug 配置</title>
    <link href="/xdebug.html"/>
    <id>/xdebug.html</id>
    <published>2019-06-20T03:13:58.000Z</published>
    <updated>2019-06-27T03:23:45.511Z</updated>
    
    <content type="html"><![CDATA[<h4 id="下载xdebug"><a href="#下载xdebug" class="headerlink" title="下载xdebug"></a>下载xdebug</h4><p><a href="https://xdebug.org/wizard.php" target="_blank" rel="noopener">xdebug</a><br>将phpinfo()的源代码复制到文本框中，xdebug会提示如何配置和下载哪个版本的xdebug。</p><p>php.ini配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[xdebug]</span><br><span class="line">zend_extension=/usr/lib/php/extensions/no-debug-non-zts-20160303/xdebug.so  </span><br><span class="line">xdebug.remote_enable = On</span><br><span class="line">xdebug.remote_handler = dbgp</span><br><span class="line">xdebug.remote_host = localhost</span><br><span class="line">xdebug.remote_port = 9000</span><br><span class="line">xdebug.idekey = PHPSTROM</span><br></pre></td></tr></table></figure><p><a href="https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc" target="_blank" rel="noopener">Chrome xedebug扩展安装</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;下载xdebug&quot;&gt;&lt;a href=&quot;#下载xdebug&quot; class=&quot;headerlink&quot; title=&quot;下载xdebug&quot;&gt;&lt;/a&gt;下载xdebug&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://xdebug.org/wizard.php&quot; target
      
    
    </summary>
    
      <category term="笔记" scheme="/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="xdebug" scheme="/tags/xdebug/"/>
    
  </entry>
  
  <entry>
    <title>MySQL -索引</title>
    <link href="/theindex.html"/>
    <id>/theindex.html</id>
    <published>2019-06-19T06:14:43.000Z</published>
    <updated>2019-06-19T07:35:20.155Z</updated>
    
    <content type="html"><![CDATA[<h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><h5 id="MySQL中索引有两大存储类型-BTREE和HASH。"><a href="#MySQL中索引有两大存储类型-BTREE和HASH。" class="headerlink" title="MySQL中索引有两大存储类型 BTREE和HASH。"></a>MySQL中索引有两大存储类型 <code>BTREE和HASH</code>。</h5><ul><li>MyISAM和InnoDB存储引擎只支持BTREE索引。</li><li>MEMORY/HEAP存储引擎可以支持HASH和BTREE索引。<h5 id="使用索引的优点"><a href="#使用索引的优点" class="headerlink" title="使用索引的优点"></a>使用索引的优点</h5><blockquote><ol><li>加快数据的查询速度。  </li><li>唯一索引，可以保证数据库表中每一行数据的唯一性。  </li><li>在实现数据的参考完整性方面，可以加速表和表之间的连接。  </li><li>在使用分组和排序子句进行数据查询时，也可以显著减少查询中分组和排序的时间。</li></ol></blockquote><h6 id="使用索引的缺点"><a href="#使用索引的缺点" class="headerlink" title="使用索引的缺点"></a>使用索引的缺点</h6><blockquote><ol><li>占用磁盘空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果有大量的索引，索引文件可能比数据文件更快达到最大文件尺寸（合理运用，问题不大）。  </li><li>损耗性能（添加、修改、删除） 索引需要动态地维护。</li></ol></blockquote></li></ul><h5 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h5><ol><li><p>普通索引：最基本的索引，没有任何限制，是我们大多数情况下使用到的索引。</p></li><li><p>唯一索引：与普通索引类型，不同的是唯一索引的列值必须唯一，但允许为空值。</p></li><li><p>全文索引：全文索引（FULLTEXT）仅可以适用于MyISAM引擎的数据表；作用于CHAR、VARCHAR、TEXT数据类型的列。</p></li><li><p>组合索引：将几个列作为一条索引进行检索，使用最左匹配原则。</p></li></ol><h5 id="建立索引的原则"><a href="#建立索引的原则" class="headerlink" title="建立索引的原则"></a>建立索引的原则</h5><ul><li>合理设计和使用索引。</li><li>在关键字段的索引上，建与不建索引，查询速度相差近100倍。</li><li>差的索引和没有索引效果一样。</li><li>索引并非越多越好，因为维护索引需要成本。</li><li>每个表的索引应在5个以下，应合理利用部分索引和联合索引。</li><li>不在结果集中的结果单一的列上建索引。比如性别字段只有0和1两种结果集，在这个字段上建索引并不会有太多帮助。</li><li>建索引的字段结果集最好分布均匀，或者符合正态分布。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;h5 id=&quot;MySQL中索引有两大存储类型-BTREE和HASH。&quot;&gt;&lt;a href=&quot;#MySQL中索引有两大存储类型-BTREE和HASH
      
    
    </summary>
    
      <category term="mysql" scheme="/categories/mysql/"/>
    
    
      <category term="笔记" scheme="/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据库基本语句优化十个原则</title>
    <link href="/mysql.html"/>
    <id>/mysql.html</id>
    <published>2019-06-19T05:40:02.000Z</published>
    <updated>2019-06-19T06:06:27.449Z</updated>
    
    <content type="html"><![CDATA[<ol><li>尽量避免在列上进行运算,这样会导致索引失效.<br>原句: <code>SELECT * FROM t WHERE YEAR(d) &gt;= 2011;</code><br>优化: <code>SELECT * FROM t WHERE d &gt;= &#39;2011-01-01&#39;;</code></li><li>使用JOIN时,应该用小结果集驱动大结果集.同时把复杂的JOIN查询拆分为多个query.因为JOIN多个表时,可能导致更多的锁定和堵塞.<br><code>SELECT * FROM a JOIN b ON a.id=b.id LEFT JOIN c ON c.time=a.date LEFT JOIN d ON c.pid=d.aid LEFT JOIN e ON e.cid=a.did</code></li><li>注意LIKE模糊查询的使用,避免%%<br>原句:<code>SELECT * FROM t WHERE name LIKE &#39;%de%&#39;;</code><br>优化: <code>SELECT * FROM t WHERE name &gt;= &#39;de&#39; AND name &lt; &#39;df&#39;;</code></li><li>仅列出需要查询的字段,这对速度不会有明显营销,主要考虑节省内存.<br>原句: <code>SELECT * FROM test;</code><br>优化: <code>SELECT name FROM test;</code></li><li>使用批量插入语句节省交互.<br>原句:<br><code>INSERT INTO t(id,name) values(1,&#39;a&#39;);</code><br><code>INSERT INTO t(id,name) values(2,&#39;b&#39;);</code><br><code>INSERT INTO t(id,name) values(3,&#39;c&#39;);</code><br>优化:<br><code>INSERT INTO t(id,name) values(1,&#39;a&#39;),(2,&#39;b&#39;),(3,&#39;c&#39;);</code></li><li>limit的基数比较大的时候使用between.<br>原句: <code>SELECT * FROM article order by id limit 10000,10;</code><br>优化: <code>SELECT * FROM article where id between 10000 and 10010 order by id;</code><ul><li>ps:between限定比limit快,所以在海量数据访问时,建议使用between或者是where替换掉limit.</li><li>但是between也有缺陷,如果id中间有断行或者是中间部分id不读取的情况,总读取的数量会少于预计数量!(在读取比较后面的数据时,使用desc方式把数据反向查找,以减少前段数据的扫描,让limit的基数越小越好)</li></ul></li><li>不要使用rand函数获取多条随机记录.<br>原句: <code>select * from table order by rand() limit 20;</code><br>优化: <code>select * from table as a join (select round(rand() * ((select MAX(id) from table) - (select min(id) from table)) + (select min(id) from table )) as id ) as b where a.id&gt;b.id order by a.id limit 1;</code><br>当然也可以使用PHP产生随机数传给MySQL</li><li>避免使用NULL.</li><li>不要使用count(id),而应该是count(*)</li><li>不要做无谓的排序操作,而应尽可能在索引中完成排序.  </li></ol><p>本文出自于《PHP核心技术与最佳实践》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;尽量避免在列上进行运算,这样会导致索引失效.&lt;br&gt;原句: &lt;code&gt;SELECT * FROM t WHERE YEAR(d) &amp;gt;= 2011;&lt;/code&gt;&lt;br&gt;优化: &lt;code&gt;SELECT * FROM t WHERE d &amp;gt;= &amp;#3
      
    
    </summary>
    
      <category term="mysql" scheme="/categories/mysql/"/>
    
    
      <category term="优化" scheme="/tags/%E4%BC%98%E5%8C%96/"/>
    
      <category term="笔记" scheme="/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>http / https 详解</title>
    <link href="/http.html"/>
    <id>/http.html</id>
    <published>2019-06-17T09:12:36.000Z</published>
    <updated>2019-06-18T06:39:53.356Z</updated>
    
    <content type="html"><![CDATA[<h3 id="HTTP和HTTPS基本概念"><a href="#HTTP和HTTPS基本概念" class="headerlink" title="HTTP和HTTPS基本概念"></a>HTTP和HTTPS基本概念</h3><p>　　深入学习这个东西前，我们先来从维基百科上看看它俩的概念。</p><ul><li>HTTP:超文本传输协议（英文：HyperText Transfer Protocol，缩写：HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议[1]。HTTP是万维网的数据通信的基础。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。通过HTTP或者HTTPS协议请求的资源由统一资源标识符（Uniform Resource Identifiers，URI）来标识。　　</li><li>HTTPS：超文本传输安全协议（英语：Hypertext Transfer Protocol Secure，缩写：HTTPS，常称为HTTP over TLS，HTTP over SSL或HTTP Secure）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。这个协议由网景公司（Netscape）在1994年首次提出，随后扩展到互联网上。历史上，HTTPS连接经常用于万维网上的交易支付和企业信息系统中敏感信息的传输。在2000年代晚期和2010年代早期，HTTPS开始广泛使用于保护所有类型网站上的网页真实性，保护账户和保持用户通信，身份和网络浏览的私密性。</li></ul><h3 id="HTTP和HTTPS的差异"><a href="#HTTP和HTTPS的差异" class="headerlink" title="HTTP和HTTPS的差异"></a>HTTP和HTTPS的差异</h3><ol><li>从上面概念也可以看出来HTTP是不安全的，且攻击者通过监听和中间人攻击等手段，可以获取网站帐户和敏感信息等。HTTPS被设计为可防止前述攻击，并在正确配置时被认为是安全的.  　　</li><li>HTTP的URL由“http://”起始且默认使用端口80，而HTTPS的URL由“https://”起始且默认使用端口443。　　</li><li>HTTP协议运行在TCP之上，所有传输的内容都是明文，客户端和服务器端都无法验证对方的身份。HTTPS是运行在SSL/TLS之上的HTTP协议，SSL/TLS运行在TCP之上。所有传输的内容都经过加密，加密采用对称加密，但对称加密的密钥用服务器方的证书进行了非对称加密。　　  <ul><li>对称加密：密钥只有一个，加密解密为同一个密码，且加解密速度快，典型的对称加密算法有DES、AES等；　　  </li><li>非对称加密：密钥成对出现（且根据公钥无法推知私钥，根据私钥也无法推知公钥），加密解密使用不同密钥（公钥加密需要私钥解密，私钥加密需要公钥解密），相对对称加密速度较慢，典型的非对称加密算法有RSA、DSA等。<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/reprinted/ssl.png" alt></li></ul></li></ol><h3 id="HTTPS工作原理"><a href="#HTTPS工作原理" class="headerlink" title="HTTPS工作原理"></a>HTTPS工作原理</h3><h5 id="下面看一下网站访问过程："><a href="#下面看一下网站访问过程：" class="headerlink" title="下面看一下网站访问过程："></a>下面看一下网站访问过程：</h5><p>大家很明显发现目前大部分网站使用的还是http协议，下面我们通过一个图片很容易的了解一下网站访问的一个过程。<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/reprinted/ip.png" alt="网站访问过程"></p><h5 id="了解完网站访问后我们来看一下使用HTTPS的工作原理"><a href="#了解完网站访问后我们来看一下使用HTTPS的工作原理" class="headerlink" title="了解完网站访问后我们来看一下使用HTTPS的工作原理"></a>了解完网站访问后我们来看一下使用HTTPS的工作原理</h5><p><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/reprinted/ht.png" alt="网站访问过程"></p><ol><li>客户使用HTTPS的URL访问Web服务器，要求与Web服务器建立SSL连接。　　</li><li>Web服务器收到客户端请求后，会将网站的证书信息（证书中包含公钥）传送一份给客户端。　</li><li>客户端的浏览器与Web服务器开始协商SSL/TLS连接的安全等级，也就是信息加密的等级。　　</li><li>客户端的浏览器根据双方同意的安全等级，建立会话密钥，然后利用网站的公钥将会话密钥加密，并传送给网站。　　</li><li>Web服务器利用自己的私钥解密出会话密钥。</li><li>Web服务器利用会话密钥加密与客户端之间的通信。</li></ol><h5 id="从上面可以总结出HTTPS的优点："><a href="#从上面可以总结出HTTPS的优点：" class="headerlink" title="从上面可以总结出HTTPS的优点："></a>从上面可以总结出HTTPS的优点：</h5><ol><li>客户端产生的密钥只有客户端和服务器端能得到；　　</li><li>加密的数据只有客户端和服务器端才能得到明文；　　</li><li>客户端到服务端的通信是安全的。<br>另外谷歌曾在2014年8月份调整搜索引擎算法，并称“比起同等HTTP网站，采用HTTPS加密的网站在搜索结果中的排名将会更高”。</li></ol><h3 id="HTTPS的局限-缺点"><a href="#HTTPS的局限-缺点" class="headerlink" title="HTTPS的局限/缺点"></a>HTTPS的局限/缺点</h3><p>　　我们说了这么多HTTPS的优点，难道它就没有缺点或者说是局限吗？当然有，毕竟万物不可完美！　　</p><ol><li>HTTPS比HTTP耗费更多服务器资源（https其实就是建构在SSL/TLS之上的 http协议，所以要比较https比http多用多少服务器资源，主要看SSL/TLS本身消耗多少服务器资源。）</li><li>耗费的资源多，过程也复杂，想当然访问不如HTTP高效。大流量网站非必要也不会采用，流量成本太高。　　</li><li>HTTPS并不能防止站点被网络蜘蛛抓取。在某些情形中，被加密资源的URL可仅通过截获请求和响应的大小推得，这就可使攻击者同时知道明文（公开的静态内容）和密文（被加密过的明文），从而使选择密文攻击成为可能。　　</li><li>SSL证书需要钱，功能越强大的证书费用越高，个人网站、小网站没有必要一般不会用。　　</li><li>SSL证书通常需要绑定IP，不能在同一IP上绑定多个域名，IPv4资源不可能支撑这个消耗。</li></ol><p>此文转自<a href="https://juejin.im/post/5a030e326fb9a0450a66c8ea" target="_blank" rel="noopener">掘金</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;HTTP和HTTPS基本概念&quot;&gt;&lt;a href=&quot;#HTTP和HTTPS基本概念&quot; class=&quot;headerlink&quot; title=&quot;HTTP和HTTPS基本概念&quot;&gt;&lt;/a&gt;HTTP和HTTPS基本概念&lt;/h3&gt;&lt;p&gt;　　深入学习这个东西前，我们先来从维基百科上
      
    
    </summary>
    
      <category term="网络协议" scheme="/categories/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="http&amp;https" scheme="/tags/http-https/"/>
    
  </entry>
  
  <entry>
    <title>php常见的魔术方法</title>
    <link href="/magic.html"/>
    <id>/magic.html</id>
    <published>2019-06-17T09:06:25.000Z</published>
    <updated>2019-06-18T06:36:57.097Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>__construct 构造函数 初始化赋值 实例化对象的时候自己调用</p></li><li><p>__destruct 析构方法，PHP 将在对象被销毁前（即从内存中清除前）调用这个方法</p></li><li><p>__get ($property) 当调用一个未定义的属性时，此方法会被触发，传递的参数是被访问的属性名</p></li><li><p>__set ($property, $value) 给一个未定义的属性赋值时，此方法会被触发，传递的参数是被设置的属性名和值 这里的没有声明包括当使用对象调用时，访问控制为 proteced,private 的属性（即没有权限访问的属性）。</p></li><li><p>__isset ($property) 当在一个未定义的属性上调用 isset () 函数时调用此方法</p></li><li><p>__unset ($property) 当在一个未定义的属性上调用 unset () 函数时调用此方法</p></li><li><p>_call ($method, $arg_array) 当调用一个未定义的方法是调用此方法</p></li><li><p>__autoload 函数，它会在试图使用尚未被定义的类时自动调用。通过调用此函数，脚本引擎在 PHP 出错失败前有了最后一个机会加载所需的类。</p></li><li><p>clone 复制一个对象时自动调用 clone 方法，如果在对象复制需要执行某些初始化操作，可以在 clone 方法实现。</p></li><li><p>__toString 方法在将一个对象转化成字符串时自动调用，比如使用 echo 打印对象时。</p></li><li><p>__sleep 串行化的时候用</p></li><li><p>callStatic 它的工作方式类似于 call () 魔术方法，__callStatic () 是为了处理静态方法调用</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;__construct 构造函数 初始化赋值 实例化对象的时候自己调用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;__destruct 析构方法，PHP 将在对象被销毁前（即从内存中清除前）调用这个方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;__get ($prope
      
    
    </summary>
    
      <category term="php" scheme="/categories/php/"/>
    
    
      <category term="魔术方法" scheme="/tags/%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>markdown</title>
    <link href="/markdown.html"/>
    <id>/markdown.html</id>
    <published>2019-06-17T05:55:29.000Z</published>
    <updated>2019-06-18T06:37:56.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="markdown-笔记"><a href="#markdown-笔记" class="headerlink" title="markdown 笔记"></a>markdown 笔记</h1><ul><li><p>基本语法可参考 <a href="http://xianbai.me/learn-md/index.html" target="_blank" rel="noopener">Markdown 入门参考</a></p></li><li><p>markdown 可支持html写法 所以可使用html扩展页面</p></li></ul><ol><li><p>修改字体颜色  </p><p> <code>&lt;font color=&quot;颜色（red）&quot;&gt;修改字体颜色为红色&lt;/font&gt;</code><br><font color="red">修改字体颜色为红色</font></p></li><li><p>同理 修改字体大小 </p><p> <code>&lt;font size=&quot;1&quot;&gt;修改字体大小&lt;/font&gt;</code><br> <font size="1">修改字体大小</font></p></li><li><p>文字居中<br> <code>&lt;center&gt;wniu&lt;/center&gt;</code>  </p> <center>wniu</center></li><li><p>图片设置宽高 居中显示<br> <code>&lt;div align=center&gt;&lt;img width = &#39;宽度(50)&#39; height =&#39;高度(50)&#39; src =&quot;图片链接&quot;/&gt;&lt;/div&gt;</code></p> <div align="center"><img width="50" height="50" src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/about/about.jpg"></div></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;markdown-笔记&quot;&gt;&lt;a href=&quot;#markdown-笔记&quot; class=&quot;headerlink&quot; title=&quot;markdown 笔记&quot;&gt;&lt;/a&gt;markdown 笔记&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;基本语法可参考 &lt;a href=&quot;http://x
      
    
    </summary>
    
      <category term="工具" scheme="/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="markdown" scheme="/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>接口(interface)的概念</title>
    <link href="/interface.html"/>
    <id>/interface.html</id>
    <published>2019-06-13T13:49:54.000Z</published>
    <updated>2019-06-18T07:20:54.339Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PHP接口（interface）的特点"><a href="#PHP接口（interface）的特点" class="headerlink" title="PHP接口（interface）的特点"></a>PHP接口（interface）的特点</h3><ol><li>接口的方法必须是公开的。 </li><li>接口的方法默认是抽象的，所以不在方法名前面加abstract。 </li><li>接口可以定义常量，但不能定义成员属性，常量的定义和用法和类中常量一样。 <a id="more"></a></li><li>类可以实现多个接口（相当于把多个功能集于一身，如厨房有各种厨具） </li><li>接口也可以继承接口。<br>PHP同大多数的面向对象语言一样，并不支持多重继承。如果需要实现多重继承功能，在PHP中，可以通过接口，它是PHP解决多重继承问题的方法，在php5.4版本之后有个类的新特性trait，有兴趣的可以自行了解下。</li></ol><p>接口的思想是指定一个实现了该接口的类必须实现的一系列函数。如果没有实现接口中指定的方法，将产生一个致命错误。<br>当有很多人一起开发一个项目时，可能都会去调用别人写的一些类，那你就会问，我怎么知道他的某个功能的实现方法是怎么命名的呢，这个时候PHP接口类interface就起到作用了，当我们定义了一个接口类时，它里面的方式是下面的子类必须实现的，比如 :<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">Shop</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">buy</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">sell</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">view</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我声明一个shop接口类，定义了三个方法：买(buy),卖(sell),浏览(view),那么继承此类的所有子类都必须实现这3个方法少一个都不行，如果子类没有实现这些话，就无法运行。实际上接口类说白了，就是一个类的模板，一个类的规定，如果你属于这类，你就必须遵循我的规定，少一个都不行，但是具体你怎么去做，我不管，那是你的事，如： </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> <span class="keyword">implements</span> <span class="title">Shop</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">buy</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement tebuyst() method.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sell</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement sell() method.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement view() method.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么要用接口？接口到底有什么好处？接口本身并不提供实现，只是提供一个规范。如果我们知道一个类实现了某个接口，那么就知道了可以调用该接口的哪些方法，我们只需要知道这些就够了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;PHP接口（interface）的特点&quot;&gt;&lt;a href=&quot;#PHP接口（interface）的特点&quot; class=&quot;headerlink&quot; title=&quot;PHP接口（interface）的特点&quot;&gt;&lt;/a&gt;PHP接口（interface）的特点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;接口的方法必须是公开的。 &lt;/li&gt;
&lt;li&gt;接口的方法默认是抽象的，所以不在方法名前面加abstract。 &lt;/li&gt;
&lt;li&gt;接口可以定义常量，但不能定义成员属性，常量的定义和用法和类中常量一样。&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="php" scheme="/categories/php/"/>
    
    
      <category term="interface" scheme="/tags/interface/"/>
    
  </entry>
  
  <entry>
    <title>使用Vultr搭建自用ssr</title>
    <link href="/ssr.html"/>
    <id>/ssr.html</id>
    <published>2019-06-01T06:12:04.000Z</published>
    <updated>2019-06-18T06:35:33.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-购买vps服务器"><a href="#1-购买vps服务器" class="headerlink" title="1 . 购买vps服务器"></a>1 . 购买vps服务器</h1><ul><li>去 <a href="https://www.vultr.com/" target="_blank" rel="noopener">Vultr</a> 官网注册一个账号。<a id="more"></a><h3 id="选择服务器位置"><a href="#选择服务器位置" class="headerlink" title="选择服务器位置"></a>选择服务器位置</h3><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/first.png" alt></li></ul><h3 id="选择系统类型"><a href="#选择系统类型" class="headerlink" title="选择系统类型"></a>选择系统类型</h3><p><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/second.png" alt></p><h3 id="服务器配置选择-一般个人使用选最低价格就好"><a href="#服务器配置选择-一般个人使用选最低价格就好" class="headerlink" title="服务器配置选择(一般个人使用选最低价格就好)"></a>服务器配置选择(一般个人使用选最低价格就好)</h3><p><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/three.png" alt></p><p><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/four.png" alt></p><ul><li>最后选择 Deploy Now 开始部署服务器</li></ul><h1 id="2-完成购买"><a href="#2-完成购买" class="headerlink" title="2. 完成购买"></a>2. 完成购买</h1><ul><li><p>在 Servers 里面可以看到部署好的服务器，点击 Manage 查看服务器信息。<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/6.jpg" alt></p></li><li><p>点击查看服务体具体信息<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/7.png" alt></p></li><li><p>连接服务器 mac可以直接打开终端  </p></li><li><p>windows连接服务器可选择 xshell </p><p>  <code>$ ssh -p 22 root@your IP Address</code></p></li><li><p>回车 输入密码  看到如下图<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/8.png" alt></p></li><li><p>执行以下命令 </p><p>  <code>$ wget --no-check-certificate https://freed.ga/github/shadowsocksR.sh; bash shadowsocksR.sh</code></p></li><li><p>若提示：wget :command not found 执行以下命令 </p><p>  <code>$ yum install wget -y</code></p></li><li><p>密码可使用默认 也可以自己设置 回车<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/1.png" alt></p></li><li><p>端口按推荐设置 回车<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/2.png" alt></p></li><li><p>任意键开始搭建 耐心等待<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/3.png" alt></p></li><li><p>安装好后如下图 界面显示ssr信息<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/5.png" alt></p></li><li><p>配置好小飞机就可以科学上网啦<br><img src="https://wniu.oss-cn-shenzhen.aliyuncs.com/art/ssr/9.png" alt></p></li></ul><h1 id="ssr客户端下载"><a href="#ssr客户端下载" class="headerlink" title="ssr客户端下载"></a>ssr客户端下载</h1><ul><li><p><a href="https://github.com/shadowsocksr-backup/ShadowsocksX-NG/releases" target="_blank" rel="noopener">mac版本下载</a></p></li><li><p><a href="https://github.com/shadowsocksr-backup/ShadowsocksX-NG/releases" target="_blank" rel="noopener">win版本下载</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-购买vps服务器&quot;&gt;&lt;a href=&quot;#1-购买vps服务器&quot; class=&quot;headerlink&quot; title=&quot;1 . 购买vps服务器&quot;&gt;&lt;/a&gt;1 . 购买vps服务器&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;去 &lt;a href=&quot;https://www.vultr.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vultr&lt;/a&gt; 官网注册一个账号。&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="linux" scheme="/categories/linux/"/>
    
    
      <category term="ssr" scheme="/tags/ssr/"/>
    
  </entry>
  
  <entry>
    <title>挂载oss</title>
    <link href="/oss.html"/>
    <id>/oss.html</id>
    <published>2019-05-31T08:55:46.000Z</published>
    <updated>2019-06-18T06:35:52.755Z</updated>
    
    <content type="html"><![CDATA[<h4 id="下载oss安装包"><a href="#下载oss安装包" class="headerlink" title="下载oss安装包"></a>下载oss安装包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://docs-aliyun.cn-hangzhou.oss.aliyun-inc.com/assets/attach/32196/cn_zh/1507811577850/ossfs_1.80.3_centos7.0_x86_64.rpm</span><br></pre></td></tr></table></figure><a id="more"></a> <h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum localinstall ossfs_1.80.3_centos7.0_x86_64.rpm</span><br></pre></td></tr></table></figure><h4 id="设置bucket-name-和-AccessKeyId-Secret信息，将其存放在-etc-passwd-ossfs-文件中"><a href="#设置bucket-name-和-AccessKeyId-Secret信息，将其存放在-etc-passwd-ossfs-文件中" class="headerlink" title="设置bucket name 和 AccessKeyId/Secret信息，将其存放在/etc/passwd-ossfs 文件中"></a>设置bucket name 和 AccessKeyId/Secret信息，将其存放在/etc/passwd-ossfs 文件中</h4> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> my-bucket:my-access-key-id:my-access-key-secret &gt; /etc/passwd-ossfs</span><br><span class="line">$ chmod 640 /etc/passwd-ossfs</span><br></pre></td></tr></table></figure><h4 id="将OSS-bucket-mount到指定挂载程序目录。"><a href="#将OSS-bucket-mount到指定挂载程序目录。" class="headerlink" title="将OSS bucket mount到指定挂载程序目录。"></a>将OSS bucket mount到指定挂载程序目录。</h4> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ossfs my-bucket my-mount-point -ourl=my-oss-endpoint</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;下载oss安装包&quot;&gt;&lt;a href=&quot;#下载oss安装包&quot; class=&quot;headerlink&quot; title=&quot;下载oss安装包&quot;&gt;&lt;/a&gt;下载oss安装包&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget http://docs-aliyun.cn-hangzhou.oss.aliyun-inc.com/assets/attach/32196/cn_zh/1507811577850/ossfs_1.80.3_centos7.0_x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="阿里云" scheme="/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="oss" scheme="/tags/oss/"/>
    
  </entry>
  
</feed>
